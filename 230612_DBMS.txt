# 게시판 요구사항
DROP DATABASE IF EXISTS AM;
CREATE DATABASE AM;
USE AM;

# 1. 회원은 아이디/비밀번호로 로그인할 수 있다. 회원은 실명과 닉네임을 갖는다. 닉네임은 게시판에서 활동할 때 사용되는 이름으로 중복이 불가능하다.
CREATE TABLE `member`(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    loginId VARCHAR(50) NOT NULL UNIQUE,
    loginPw VARCHAR(100) NOT NULL,
    `name` VARCHAR(20) NOT NULL,
    nickname VARCHAR(20) NOT NULL UNIQUE
);

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'user1',
loginPw = '1234',
`name` = '홍길동',
nickname = '신출귀몰';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'user2',
loginPw = '4321',
`name` = '이순신',
nickname = '구국의영웅';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'user3',
loginPw = '1423',
`name` = '임꺽정',
nickname = '힘센장사';

INSERT INTO `member`
SET regDate = NOW(),
updateDate = NOW(),
loginId = 'user4',
loginPw = '3131',
`name` = '유관순',
nickname = '독립열사';

# 2. 게시판은 일단 공지사항, 자유게시판, 질문과 답변 총 3개를 운영할 것이며 추후 추가될 수 있다.
CREATE TABLE board(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(20) NOT NULL
);

INSERT INTO board
SET `name` = '공지사항';

INSERT INTO board
SET `name` = '자유게시판';

INSERT INTO board
SET `name` = '질문과 답변';

# 3. 게시물은 번호, 제목, 내용, 작성자, 조회수, 수정일, 작성일로 이루어진다. 
CREATE TABLE article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    title VARCHAR(200) NOT NULL,
    `body` TEXT NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    viewCnt INT UNSIGNED NOT NULL DEFAULT 0
);

ALTER TABLE article ADD COLUMN boardId INT UNSIGNED NOT NULL AFTER `body`;

INSERT INTO article
SET regDate = '2020-03-03 12:30:00',
updateDate = '2020-03-03 12:30:00',
title = '제목1',
`body` = '내용1',
boardId = 2,
memberId = 1,
viewCnt = 10;

INSERT INTO article
SET regDate = '2021-04-05 15:12:00',
updateDate = '2021-04-05 15:12:00',
title = '제목2',
`body` = '내용2',
boardId = 2,
memberId = 1,
viewCnt = 23;

INSERT INTO article
SET regDate = '2022-01-02 19:08:00',
updateDate = '2022-01-02 19:08:00',
title = '제목3',
`body` = '내용3',
boardId = 2,
memberId = 1,
viewCnt = 31;

INSERT INTO article
SET regDate = '2021-04-01 08:30:00',
updateDate = '2021-04-01 08:30:00',
title = '제목4',
`body` = '내용5',
boardId = 2,
memberId = 2,
viewCnt = 100;

INSERT INTO article
SET regDate = '2021-05-07 16:22:00',
updateDate = '2021-05-07 16:22:00',
title = '제목5',
`body` = '내용5',
boardId = 2,
memberId = 2,
viewCnt = 13;

INSERT INTO article
SET regDate = '2020-03-03 12:30:00',
updateDate = '2020-03-03 12:30:00',
title = '제목6',
`body` = '내용6',
boardId = 1,
memberId = 2,
viewCnt = 112;

INSERT INTO article
SET regDate = '2021-06-01 17:12:00',
updateDate = '2021-06-01 17:12:00',
title = '제목7',
`body` = '내용7',
boardId = 1,
memberId = 2,
viewCnt = 224;

INSERT INTO article
SET regDate = '2020-07-01 22:30:00',
updateDate = '2020-07-01 22:30:00',
title = '제목8',
`body` = '내용8',
boardId = 3,
memberId = 3,
viewCnt = 87;

INSERT INTO article
SET regDate = '2022-03-03 23:12:00',
updateDate = '2022-03-03 23:12:00',
title = '제목9',
`body` = '내용9',
boardId = 3,
memberId = 3,
viewCnt = 56;

INSERT INTO article
SET regDate = '2022-04-01 20:00:00',
updateDate = '2022-04-01 20:00:00',
title = '제목10',
`body` = '내용10',
boardId = 3,
memberId = 2,
viewCnt = 3;

INSERT INTO article
SET regDate = '2022-03-11 20:00:00',
updateDate = '2022-03-11 20:00:00',
title = '제목11',
`body` = '내용11',
boardId = 3,
memberId = 4,
viewCnt = 12;

INSERT INTO article
SET regDate = '2022-02-13 20:00:00',
updateDate = '2022-02-13 20:00:00',
title = '제목12',
`body` = '내용12',
boardId = 2,
memberId = 4,
viewCnt = 32;

# 4. 각 게시물은 좋아요를 체크할 수 있다. 한 회원이 한 게시물당 하나의 좋아요만 체크 가능하다. 좋아요는 해제 가능하다.
CREATE TABLE goodPoint(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    relTypeCode VARCHAR(20) NOT NULL,
    relId INT UNSIGNED NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    `point` TINYINT UNSIGNED NOT NULL COMMENT '1 : 좋아요'
);

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 4,
memberId = 2,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 1,
memberId = 1,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 1,
memberId = 4,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 7,
memberId = 1,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 7,
memberId = 4,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 10,
memberId = 2,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 10,
memberId = 1,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 10,
memberId = 4,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 10,
memberId = 3,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 6,
memberId = 4,
`point` = 1;

INSERT INTO goodPoint
SET relTypeCode = 'article',
relId = 3,
memberId = 4,
`point` = 1;

# 5. 각 게시물에 여러개의 댓글을 작성할 수 있다. 
CREATE TABLE reply(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    relTypeCode VARCHAR(20) NOT NULL,
    relId INT UNSIGNED NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    `body` VARCHAR(200) NOT NULL
);

INSERT INTO reply
SET regDate = '2021-04-05 15:12:00',
updateDate = '2021-04-05 15:12:00',
relTypeCode = 'article',
relId = 1,
memberId = 3,
`body` = '댓글내용1';

INSERT INTO reply
SET regDate = '2021-05-02 19:08:00',
updateDate = '2021-05-02 19:08:00',
relTypeCode = 'article',
relId = 1,
memberId = 3,
`body` = '댓글내용2';

INSERT INTO reply
SET regDate = '2020-07-05 13:32:00',
updateDate = '2020-07-05 13:32:00',
relTypeCode = 'article',
relId = 8,
memberId = 3,
`body` = '댓글내용9';

INSERT INTO reply
SET regDate = '2020-07-07 11:15:00',
updateDate = '2020-07-07 11:15:00',
relTypeCode = 'article',
relId = 8,
memberId = 3,
`body` = '댓글내용10';

INSERT INTO reply
SET regDate = '2022-06-05 15:22:00',
updateDate = '2020-06-05 15:22:00',
relTypeCode = 'article',
relId = 9,
memberId = 3,
`body` = '댓글내용11';

INSERT INTO reply
SET regDate = '2022-07-04 17:14:00',
updateDate = '2022-07-04 17:14:00',
relTypeCode = 'article',
relId = 9,
memberId = 3,
`body` = '댓글내용12';

INSERT INTO reply
SET regDate = '2022-03-05 17:02:00',
updateDate = '2022-03-05 17:02:00',
relTypeCode = 'article',
relId = 9,
memberId = 2,
`body` = '댓글내용13';

INSERT INTO reply
SET regDate = '2022-03-07 12:32:00',
updateDate = '2022-03-07 12:32:00',
relTypeCode = 'article',
relId = 9,
memberId = 2,
`body` = '댓글내용14';

INSERT INTO reply
SET regDate = '2022-03-07 16:15:00',
updateDate = '2022-03-07 16:15:00',
relTypeCode = 'article',
relId = 9,
memberId = 2,
`body` = '댓글내용15';

INSERT INTO reply
SET regDate = '2020-03-03 12:30:00',
updateDate = '2020-03-03 12:30:00',
relTypeCode = 'article',
relId = 6,
memberId = 1,
`body` = '댓글내용3';

INSERT INTO reply
SET regDate = '2020-03-05 15:12:00',
updateDate = '2020-03-05 15:12:00',
relTypeCode = 'article',
relId = 6,
memberId = 1,
`body` = '댓글내용4';

INSERT INTO reply
SET regDate = '2020-03-12 19:08:00',
updateDate = '2020-03-12 19:08:00',
relTypeCode = 'article',
relId = 6,
memberId = 1,
`body` = '댓글내용5';

INSERT INTO reply
SET regDate = '2021-06-03 12:30:00',
updateDate = '2021-06-03 12:30:00',
relTypeCode = 'article',
relId = 7,
memberId = 1,
`body` = '댓글내용6';

INSERT INTO reply
SET regDate = '2021-06-05 15:12:00',
updateDate = '2021-06-05 15:12:00',
relTypeCode = 'article',
relId = 7,
memberId = 1,
`body` = '댓글내용7';

INSERT INTO reply
SET regDate = '2022-04-01 19:08:00',
updateDate = '2022-04-01 19:08:00',
relTypeCode = 'article',
relId = 7,
memberId = 1,
`body` = '댓글내용8';

# 6. 한 회원이 한 게시물에 여러개의 댓글도 작성 가능하다.

# 7. 게시물을 보여줄 때 각 게시물의 좋아요수, 댓글수도 보여주고 싶다.

SELECT * FROM `member`;
SELECT * FROM board;
SELECT * FROM article;
SELECT * FROM goodPoint;
SELECT * FROM reply

# 모든 게시물의 개수 출력
SELECT COUNT(*) FROM article;

# 모든 게시물의 조회수의 총합 출력
SELECT SUM(viewCnt) FROM article;

# 이순신이 작성한 댓글의 내용, 작성자 닉네임, 작성일 출력. 작성일로 내림차순
SELECT r.`body`, m.nickname, r.regDate
    FROM reply AS r
    INNER JOIN `member` AS m
    ON r.memberId = m.id
    WHERE m.name = '이순신'
    ORDER BY r.regDate DESC;

# 작성자명에 '사'가 들어가는 작성자의 모든 게시물 조회(게시물번호, 제목, 내용, 조회수, 작성자 닉네임, 작성일). 작성일로 내림차순
SELECT a.id
    , a.title
    , a.`body`
    , a.viewCnt
    , m.nickname
    , a.regDate
    FROM article AS a
    INNER JOIN `member` AS m
    ON a.memberId = m.id
    WHERE m.nickname LIKE '%사%'
    ORDER BY regDate DESC;

# 자유게시판에서 제목에 '제'라는 문자가 포함된 모든 게시물 조회(게시물번호, 제목, 내용, 조회수, 작성자 닉네임, 작성일). 작성일로 내림차순
SELECT a.id
    , a.title
    , a.`body`
    , a.viewCnt
    , m.nickname
    , a.regDate
    FROM article AS a
    INNER JOIN `member` AS m
    ON a.memberId = m.id
    WHERE a.boardId = 2
        AND a.title LIKE '%제%'
    ORDER BY regDate DESC;

# 각 게시판별 게시판 이름과 총 게시물 수 출력. 게시물 수 내림차순
SELECT b.name
    , COUNT(*)
    FROM board AS b
    INNER JOIN article AS a
    ON b.id = a.boardId
    GROUP BY b.name
    ORDER BY COUNT(*) DESC;

# 최근 1년 사이의 게시물 제목, 내용, 작성자 닉네임, 작성일 출력 . 작성일로 내림차순
SELECT a.title
    , a.`body`
    , m.nickname
    , a.regDate
    FROM article AS a
    INNER JOIN `member` AS m
    ON a.memberId = m.id
    WHERE a.regDate BETWEEN DATE_ADD(NOW(), INTERVAL -30 MONTH) AND NOW()
    ORDER BY a.regDate DESC;

# 최근 반년 사이의 게시물 제목, 내용, 작성자 닉네임, 작성일 출력 . 작성일로 내림차순
SELECT a.title
    , a.`body`
    , m.nickname
    , a.regDate
    FROM article AS a
    INNER JOIN `member` AS m
    ON a.memberId = m.id
    WHERE a.regDate BETWEEN DATE_ADD(NOW(), INTERVAL -24 MONTH) AND NOW()
    ORDER BY a.regDate DESC;


# 연도별 게시물 등록 개수 현황 출력. 연도 오름차순
SELECT YEAR(regDate)
    , COUNT(*)
    FROM article
    GROUP BY YEAR(regDate)
    ORDER BY YEAR(regDate) DESC;

# 가장 댓글이 많은 게시판의 게시판 이름과 댓글 수 출력. 댓글 수 내림차순
SELECT b.name
    , COUNT(*)
    FROM board AS b
    INNER JOIN article AS a
    ON b.id = a.boardId
    INNER JOIN reply AS r
    ON a.id = r.relId
    ORDER BY COUNT(*) DESC;

# 모든 게시물의 게시판이름, 제목, 작성자닉네임, 게시물작성일, 조회수, 좋아요수, 댓글수 출력. 
SELECT b.name
    , a.title
    , m.name
    , a.regDate
    , a.viewCnt
    , g.`point`
    FROM board AS b
    INNER JOIN article AS a
    ON b.id = a.boardId
    INNER JOIN reply AS r
    ON a.id = r.relId
    INNER JOIN `member` AS m
    ON a.memberId = m.id
    INNER JOIN goodPoint AS g
    ON g.relId = a.id;

# 각 게시물 별 댓글 수 내림차순, 댓글수가 같으면 게시물번호로 오름차순 (없으면 0개라고 표시)으로 출력
  
 

# 각 회원별 게시물 수 내림차순, 게시물 수가 같으면 회원번호로 오름차순(없으면 0개라고 표시)으로 출력



# 각 회원별 댓글 수 내림차순, 댓글 수가 같으면 회원번호로 오름차순(없으면 0개라고 표시)으로 출력



# 좋아요를 가장 많이 받은 회원의 아이디, 이름, 총 좋아요개수


 
# 각 회원별 게시물의 조회수 총합 내립차순, 조회수가 같으면 회원번호로 오름차순 출력 




# 총 조회수가 가장 많은 게시판의 이름



# 게시판 별 가장 조회수가 높은 게시물 top 3의 게시물 제목, 내용, 작성자닉네임, 조회수 출력. 조회수 내림차순



# 모든 게시물 중 가장 조회수가 높은 게시물 top 3의 게시물 제목, 내용, 작성자닉네임, 조회수 출력. 조회수 내림차순



# 모든 게시물 중 가장 댓글이 많은 게시물 top 3의 게시물번호, 게시물제목, 작성자닉네임, 게시물작성일, 댓글 수 출력. 댓글 수 내림차순
