# 게시판 요구사항

# 1. 회원은 아이디/비밀번호로 로그인할 수 있다. 회원은 실명과 닉네임을 갖는다. 닉네임은 게시판에서 활동할 때 사용되는 이름으로 중복이 불가능하다.
CREATE TABLE `member`(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    loginId VARCHAR(20) NOT NULL UNIQUE,
    loginPw VARCHAR(20) NOT NULL,
    `name` VARCHAR(10) NOT NULL,
    nickName VARCHAR(20) NOT NULL UNIQUE
);

# 2. 게시판은 일단 공지사항, 자유게시판, 질문과 답변 총 3개를 운영할 것이며 추후 추가될 수 있다.
CREATE TABLE board(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    boardId INT UNSIGNED NOT NULL COMMENT '공지사항 = 1, 자유게시판 = 2, 질문과 답변 = 3'
    
);

# 3. 게시물은 번호, 제목, 내용, 작성자, 조회수, 수정일, 작성일로 이루어진다. 
CREATE TABLE article(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    title VARCHAR(50) NOT NULL,
    `body` TEXT NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    hit INT UNSIGNED NOT NULL DEFAULT 0
);

# 4. 각 게시물은 좋아요를 체크할 수 있다. 한 회원이 한 게시물당 하나의 좋아요만 체크 가능하다. 좋아요는 해제 가능하다.
CREATE TABLE reactionPoint(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    boardId INT UNSIGNED NOT NULL,
    articleId INT UNSIGNED NOT NULL,
    sumReactionPoint INT NOT NULL DEFAULT 0,
    goodReactionPoint INT NOT NULL DEFAULT 0,
    badReactionPoint INT NOT NULL DEFAULT 0
);

# 5. 각 게시물에 여러개의 댓글을 작성할 수 있다. 
CREATE TABLE reply(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    updateDate DATETIME NOT NULL,
    boardId INT UNSIGNED NOT NULL,
    articleId INT UNSIGNED NOT NULL,
    memberId INT UNSIGNED NOT NULL,
    `body` TEXT NOT NULL
);

# 6. 한 회원이 한 게시물에 여러개의 댓글도 작성 가능하다.

# 7. 게시물을 보여줄 때 각 게시물의 좋아요수, 댓글수도 보여주고 싶다.
SELECT *, ra.sumReactionPoint, COUNT(rp.articleId)
    FROM article AS a
    INNER JOIN reactionPoint AS ra
    ON a.id = ra.articleId
    INNER JOIN reply AS rp
    ON a.id = rp.articleId;


