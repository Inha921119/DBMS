# a5 데이터베이스 삭제/생성/선택
DROP DATABASE IF EXISTS a5;

CREATE DATABASE a5;

USE a5;

# 부서(dept) 테이블 생성 및 홍보부서 기획부서 추가
CREATE TABLE dept(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    `Name` VARCHAR(20) UNIQUE NOT NULL
);

SELECT * FROM dept;

INSERT INTO dept
    SET regDate = NOW(),
        `Name` = '홍보';

INSERT INTO dept
    SET regDate = NOW(),
        `Name` = '기획';

# 사원(emp) 테이블 생성 및 홍길동사원(홍보부서), 홍길순사원(홍보부서), 임꺽정사원(기획부서) 추가
CREATE TABLE emp(
    id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
    regDate DATETIME NOT NULL,
    `name` VARCHAR(20) NOT NULL,
    deptName VARCHAR(20) NOT NULL
);

SELECT * FROM emp;

INSERT INTO emp
    SET regDate = NOW(),
        `name` = '홍길동',
        deptName = '홍보';

INSERT INTO emp
    SET regDate = NOW(),
        `name` = '홍길순',
        deptName = '홍보';
        
INSERT INTO emp
    SET regDate = NOW(),
        `name` = '임꺽정',
        deptName = '기획';

# 홍보를 마케팅으로 변경
UPDATE dept
    SET `Name` = '마케팅'
    WHERE id = 1;
    
UPDATE emp
    SET deptName = '마케팅'
    WHERE deptName = '홍보';
        
# 마케팅을 홍보로 변경
UPDATE dept
    SET `Name` = '홍보'
    WHERE id = 1;
    
UPDATE emp
    SET deptName = '홍보'
    WHERE deptName = '마케팅';
    
# 홍보를 마케팅으로 변경
# 구조를 변경하기로 결정(사원 테이블에서, 이제는 부서를 이름이 아닌 번호로 기억)
UPDATE dept
    SET `Name` = '마케팅'
    WHERE id = 1;
    
ALTER TABLE emp ADD COLUMN deptId INT UNSIGNED NOT NULL AFTER regDate;
ALTER TABLE emp DROP COLUMN deptName;

UPDATE emp
    SET deptId = 1
    WHERE id IN(1,2);
    
UPDATE emp
    SET deptId = 2
    WHERE id = 3;
    
# 사장님께 드릴 인명록을 생성
SELECT *
    FROM emp;

# 사장님께서 부서번호가 아니라 부서명을 알고 싶어하신다.
# 그래서 dept 테이블 조회법을 알려드리고 혼이 났다.

# 사장님께 드릴 인명록을 생성(v2, 부서명 포함, ON 없이)
# 이상한 데이터가 생성되어서 혼남
SELECT *
    FROM emp
    INNER JOIN dept;

# 사장님께 드릴 인명록을 생성(v3, 부서명 포함, 올바른 조인 룰(ON) 적용)
# 보고용으로 좀 더 편하게 보여지도록 고쳐야 한다고 지적받음
SELECT *
    FROM emp
    INNER JOIN dept
    ON emp.deptId = dept.id;

# 사장님께 드릴 인명록을 생성(v4, 사장님께서 보시기에 편한 칼럼명(AS))
SELECT e.id AS `사원번호`
    , e.name AS `사원명`
    , e.regDate AS `입사일`
    , d.`name` AS `소속부서`
    FROM emp AS e
    INNER JOIN dept AS d
    ON e.deptId = d.id;
